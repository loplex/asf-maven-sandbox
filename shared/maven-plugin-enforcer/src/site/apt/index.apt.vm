   ---
   Introduction
   ---
   Stephen Connolly
   ---
   2013-07-24
   ---

 ~~ Licensed to the Apache Software Foundation (ASF) under one
 ~~ or more contributor license agreements.  See the NOTICE file
 ~~ distributed with this work for additional information
 ~~ regarding copyright ownership.  The ASF licenses this file
 ~~ to you under the Apache License, Version 2.0 (the
 ~~ "License"); you may not use this file except in compliance
 ~~ with the License.  You may obtain a copy of the License at
 ~~
 ~~   http://www.apache.org/licenses/LICENSE-2.0
 ~~
 ~~ Unless required by applicable law or agreed to in writing,
 ~~ software distributed under the License is distributed on an
 ~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~~ KIND, either express or implied.  See the License for the
 ~~ specific language governing permissions and limitations
 ~~ under the License.

 ~~ NOTE: For help with the syntax of this file, see:
 ~~ http://maven.apache.org/doxia/references/apt-format.html

${project.name}

  When testing new versions of Maven plugins, it can often be useful
  to have a means of forcing a specific maven plugin version be used
  irrespective of what is defined in the pom.xml. Maven plugin
  developers may also want a CI server to test the new version of their
  plugin against third-party source code bases. If the third-party
  tree has locked down their plugin versions to non-SNAPSHOT versions
  and the CI server is building a -SNAPSHOT version of the plugin,
  it can be hard to automate testing the plugin -SNAPSHOTs.

  The Maven ${targetMavenVersion} Plugin Enforcer provides a means
  of forcing maven to use specific versions of plugins that you
  specify from the command line overriding any specification in the
  pom.xml file.

* Features

  * Simple command line interface

  * No digging through multiple pom.xml files searching for plugin version lock-down
