 ------
 Running a forked JVM
 ------
 Nicolas De loof
 ------
18 May 2009
 ------

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html


Running a forked JVM

  In many case a plugin cannot run the tool in the same JVM and has to fork a new JVM. Plexus-utils provide
  the necessary support to run a process, but not dedicated to Maven nor Java.

* Usage

   JavaCommandBuilder uses the builder pattern to help creating a new JVM process and run it. The executed class
   is configured with a classPath set from project Scope, optionnaly adding some more Artifacts. System properties
   and environment can be set to tweak the forked JVM. Execution can use a timeout, the builder returning a boolean
   to indicate normal termination of the forked JVM.






