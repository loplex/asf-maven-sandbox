  ---
  Maven Plugin-IT Plugin: Usage
  ---
  John Casey
  ---
  05 December 2006
  ---

Maven Plugin-IT Plugin Usage

* <<<plug-it:stage>>>

  The <<<plug-it:stage>>> mojo is quite simple to use; for many cases, the simplest
  POM configuration is sufficient:

---
<project>
  [...]
  <build>
    [...]
    <plugins>
      <plugin>
        <artifactId>maven-plug-it-plugin</artifactId>
        <executions>
          <execution>
            <id>stage-plugin</id>
            <goals>
              <goal>stage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
---

  In this case, the <<<stage>>> mojo will simply install your plugin - with its
  version changed to <<<testing>>> - into <<<$\{project.build.directory\}/local-repository>>>.
  By default, it will skip the unit tests for the plugin during this operation, since
  unit testing is meant to happen in a different part of the main build.

** Customizing the test-time version of your plugin

  If you'd like to use a test-time version other than <<<testing>>> in your
  integration-test builds, simply specify the <<<pluginVersion>>> parameter:

---
<project>
  [...]
  <build>
    [...]
    <plugins>
      <plugin>
        <artifactId>maven-plug-it-plugin</artifactId>
        <executions>
          <execution>
            <id>stage-plugin</id>
            <configuration>
              <pluginVersion>it</pluginVersion>
            </configuration>
            <goals>
              <goal>stage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
---

  Now, your integration-test builds should specify a version of <<<it>>> for
  your plugin under test.

** Using the <<<stage>>> mojo with unit-test builds

  If, for some reason, you're running Maven builds as part of your plugin's unit
  testing strategy (not sure why, but OK), you can bind the <<<stage>>> mojo to
  a lifecycle phase that executes earlier than <<<test>>>, as follows:

---
<project>
  [...]
  <build>
    [...]
    <plugins>
      <plugin>
        <artifactId>maven-plug-it-plugin</artifactId>
        <executions>
          <execution>
            <id>stage-plugin</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>stage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
---

  <NOTE: Maven currently doesn't have a lifecycle phase specifically for preparing
  the build for unit tests to execute, so we have to use the <<<process-test-classes>>>
  phase instead.>

