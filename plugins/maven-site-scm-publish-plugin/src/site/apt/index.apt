 ------
 Introduction
 ------
 Benson Margulies
 ------
 2012-02-25
 ------

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

ASF svnpubsub Plugin

    The asf-svnpubsub-plugin is a utility plugin to allow Apache
    projects to publish Maven websites via the ASF svnpubsub 
    system. 

    The plugin provides two goals: <<prepare>> and <<publish>>.

    The prepare goal checks out the contents of a directory from 
    Subversion into (by default) target/svnpubsub-checkout. It 
    then lists the files known to Subversion and stores them
    in (by default) target/svnpubsub-inventory.js. This provides
    the point of reference for an eventual Subversion checkin.

    After running the prepare goal, the POM must run site:site and
    site:stage, with the <stagingDirectory> set to
    target/svnpubsub-checkout.

    Finally, the <<publish>> goal compares the output of site:stage
    with the inventory from the <<prepare>> goal, and issues
    appropriate SCM commands to add and delete, followed by a
    checkin.

    The <svnpubsub.dryRun> parameter to the <<publish>> goal avoids all 
    SCM operations, and simply logs out the added, deleted,
    and changed files.

    The <<svnpubsub.skipCheckin>> parameter omits the final checkin.
    This allows you to visit target/svnpubsub-checkout, and validate
    its contents before submitting to Subversion.
  