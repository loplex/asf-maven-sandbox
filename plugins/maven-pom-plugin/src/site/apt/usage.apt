 ------
 Usage
 ------
 Jesse McConnell
 ------
 June 2007

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

Usage

  The Maven Pom Plugin is useful for a variety of situations, one important one being cases where you need to checkout a thirdparty application during your build process with the maven-scm-plugin and slightly alter the building mechanism at build time.  The pom plugin can be used via the command line to alter a single pom or multiple poms in some cases, but that is hardly useful since you can do this with a standard editor easier then crafting xpath statement after xpath statement.
  
  This becomes useful in case where you checkout a mess of source, perhaps apply some patches with the maven-patch-plugin and then want to build the source for a different version.  This can be accomplished via a combination of multiple execution statements and either the reactor plugin or the maven exec plugin.

  The plugin is basically very simple with alter-by-xpath being the most powerful which can basically perform the actions of the other mojos.  Other mojo's like the alter-dependencies mojo are convience mojos which work to alter dependencies and dependencyManagement elements accordingly.  Some mojo's work for single pom.xml targets while others can process multiple files at once.