Eclipse plugin for Apache Maven Doxia

Requirements:
* Maven 3 (!)
* Eclipse SDK Helios (http://download.eclipse.org/eclipse/downloads/)


Building (with Maven 3):
Tycho (http://tycho.sonatype.org) won't resolve through the reactor for the bundle, so you need to build org.apache.maven.doxia.eclipse.dependencies project first:

mvn clean install -f doxia-osgi/pom.xml
|_ Makes an OSGi bundle of doxia.

mvn clean install -f eclipse-plugins/pom.xml
|_ Creates a feature and a P2 repository
|_ Builds Eclipse plugins

The generated Eclipse Update Site will be available in:
eclipse-plugins/features/org.apache.maven.doxia.ide.eclipse.feature/target/site/

Update site generated by Jenkins CI server:
https://builds.apache.org/view/M-R/view/Maven/job/doxia-eclipse-editor/ws/doxia-ide-eclipse/eclipse-plugins/features/org.apache.maven.doxia.ide.eclipse.feature/target/site/


Plugin Development with Eclipse Helios:
File > Import > Existing Projects in Workspace and use the basedir.
To test modifications, open for instance org.apache.maven.doxia.ide.plugins-apt-ui/plugin.xml and click "Launch an Eclipse application"
Note: if you see Eclipse errors in META-INF/MANIFEST.MF (missing org.apache.maven.doxia.ide.dependencies), you need to install firstly doxia-osgi (doxia-osgi/org.apache.maven.doxia.eclipse.dependencies/target/org.apache.maven.doxia.eclipse.dependencies_1.0.0-SNAPSHOT.jar) in ECLIPSE_HOME/plugins and restart Eclipse.


Improvements:
* review POM groupId
* fixed icons and label
* add more actions like add list, comment/uncomment in Apt...
* add autocomplete
* add Maven documentation for the plugin and how to build an update site.
* test it with other Eclipse distributions

References:
* DOXIATOOLS-8: Create an Eclipse plugin to edit Doxia files
